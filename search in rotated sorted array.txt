/* https://leetcode.com/problems/search-in-rotated-sorted-array/ */

class Solution {
    public int findTarget(int[] nums, int pivot, int target)
    {
        if(target == nums[pivot])
            return pivot;
        int left, right;
        left = 0;
        right = nums.length;
        if(pivot > 0)
        {
            if(target >= nums[0])
            {
                left = 0;
                right = pivot;
            }
            else
            {
                left = pivot;
                right = nums.length;
            }
        }
        while(left < right)
        {
            int mid = (left + right)/2;
            if(target == nums[mid])
            {
                return mid;
            }
            else if(nums[mid] < target)
            {
                left = mid+1;
            }
            else
            {
                right = mid-1;
            }
        }
        if(left < nums.length && nums[left] == target)
            return left;
        return -1;
    }
    public int search(int[] nums, int target) {
        int low = 0;
        int high = nums.length-1;
        int pivot = 0;
        int flag = 0;
        if(nums.length == 0)
            return -1;
        if(nums.length == 1 && nums[0] != target)
            return -1;
        if(nums.length == 1 && nums[0] == target)
            return 0;
        if(nums[0]  < nums[high])
        {
            return findTarget(nums, 0, target);
        }
        while(low <= high)
        {
            int mid = (low+high)/2;
            if(nums[mid] > nums[mid+1])
            {
                pivot = mid+1;
                flag = 1;
                break;
            }
            else if(nums[mid] < nums[low])
            {
                high = mid - 1;
            }
            else
            {
                low = mid + 1;
            }
        }
        if(flag == 0)
            pivot = 0;
        return findTarget(nums, pivot, target);
    }
}