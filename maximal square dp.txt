/* https://leetcode.com/problems/maximal-square/ */

class Solution {
    public int min(int num1, int num2)
    {
        if(num1 < num2)
            return num1;
        else
            return num2;
    }
    public int maximalSquare(char[][] matrix) {
        int rows = matrix.length;
        if(rows == 0)
            return 0;
        int cols = matrix[0].length;
        int aux_matrix[][] = new int[rows][cols];
        int ite = 0;
        for(ite = 0; ite < rows; ite++)
        {
            if(matrix[ite][0] == '1')
                aux_matrix[ite][0] = 1;
            else
                aux_matrix[ite][0] = 0;
        }
        for(ite = 0; ite < cols; ite++)
        {
            if(matrix[0][ite] == '1')
                aux_matrix[0][ite] = 1;
            else
                aux_matrix[0][ite] = 0;
        }
        int i, j;
        for(i = 1; i < rows; i++)
        {
            for(j = 1; j < cols; j++)
            {
                if(matrix[i][j] == '0')
                {
                    aux_matrix[i][j] = 0;
                }
                else
                {
                    aux_matrix[i][j] = min(aux_matrix[i][j-1], min(aux_matrix[i-1][j], aux_matrix[i-1][j-1])) + 1;
                }
            }
        }
        int max = 0;
        for(i = 0; i < rows; i++)
        {
            for(j = 0; j < cols; j++)
            {
                if(aux_matrix[i][j] > max)
                {
                    max = aux_matrix[i][j];
                }
            }
        }
        return max*max;
    }
}