/*
a cut operation reduces the length of each stick in the array by the length of the array's shortest stick
Sample Input 1
6
5
4
4
2
2
8

Sample Output 1
6
4
2
1
*/

/*
 Complete the function below.
 Please store the size of the int array to be returned in result_size pointer. For example,
 int a[3] = {1, 2, 3};
 *result_size = 3;
 return a; 
 */

int* cutSticks(int lengths_size, int *lengths, int *result_size) 
{
   int i;
  int *arr;
  int n=lengths_size;
  arr=(int*)malloc(sizeof(int)*lengths_size);
    int min,count=0,count1=0,k=0;
    while(count1!=n)
    {
        count=0;
        count1=0;
    for(i=0;i<n;i++)
    {
        if(lengths[i]!=0)
        {
            min=lengths[i];
            break;
        }
    }
    for(i=0;i<n;i++)
    {
        if(lengths[i]<min&&lengths[i]!=0)
        {
            min=lengths[i];
        }
    }
    for(i=0;i<n;i++)
    {
        if(lengths[i]!=0&&lengths[i]-min>=0)
        {
        lengths[i]=lengths[i]-min;
        count++;
        }
    } 
    for(i=0;i<n;i++)
    {
        if(lengths[i]==0)
            count1=count1+1;
    }
    arr[k]=count;
      k++;
    }
  *result_size=k;
  return arr;
}

