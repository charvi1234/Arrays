class Solution {
    public int calculateMin(int i, int j, int[][] grid, int[][] memo)
    {
        if(i == grid.length || j == grid[0].length)
            return Integer.MAX_VALUE;
        if(memo[i][j] != 0)
            return memo[i][j];
        if(i == grid.length - 1 && j == grid[0].length - 1)
            return grid[i][j];
        memo[i][j] = grid[i][j] + Math.min(calculateMin(i+1, j, grid, memo), calculateMin(i, j+1, grid, memo));
        return memo[i][j];
    }
    public int minPathSum(int[][] grid) {
        if(grid.length == 1 && grid[0].length == 1)
            return grid[0][0];
        int memo[][] = new int[grid.length][grid[0].length];
        calculateMin(0, 0, grid, memo);
        return memo[0][0];
    }
}